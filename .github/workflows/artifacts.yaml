name: Artifacts

on:
  push:
    branches:
      - main

permissions:
  packages: write
  security-events: write

jobs:
  container-images:
    name: Container images
    runs-on: ubuntu-latest
    strategy:
      # Some older image builds may fail
      fail-fast: false
      matrix:
        fluentd:
          - version: v1.16-4.10
            alias:   v1.16-4.11
          - version: v1.17-5.0
        image-type:
          - base
          - filters
          - full

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Gather metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/fluentd
          flavor: |
            latest = false
          tags: |
            type=raw,value=${{ matrix.fluentd.version }}-${{ matrix.image-type }}
            type=raw,value=${{ matrix.fluentd.version }}-${{ matrix.image-type }}-build.${{ github.run_number }}
            type=raw,value=${{ !!matrix.fluentd.alias && matrix.fluentd.alias || 'alias' }}-${{ matrix.image-type }},enable=${{ !!matrix.fluentd.alias }}
            type=raw,value=${{ !!matrix.fluentd.alias && matrix.fluentd.alias || 'alias' }}-${{ matrix.image-type }}-build.${{ github.run_number }},enable=${{ !!matrix.fluentd.alias }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
        if: github.event_name == 'push'

      - name: Build and push (${{ matrix.image-type }})
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.fluentd.version }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: ${{ github.event_name == 'push' }}
          tags: |
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          target: ${{ matrix.image-type }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.33.0
        with:
          image-ref: "ghcr.io/${{ github.repository_owner }}/fluentd:${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}"
          format: "sarif"
          output: "trivy-results.sarif"
        if: github.event_name == 'push'
        env:
          TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db:2
          TRIVY_JAVA_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-java-db:1

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"
        if: github.event_name == 'push'
